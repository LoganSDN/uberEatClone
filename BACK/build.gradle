plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.uberClone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "3.0.4")
}

dependencies {
	// Spring Boot Starter

	// Spring Boot WebSocket Starter
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.session:spring-session-core:3.1.1'

	// WebSocket messaging with SockJS fallback
	implementation 'org.webjars:sockjs-client:1.0.2'
	implementation 'org.webjars:stomp-websocket:2.3.3'

	// JSON processing (optional)
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.springframework.security:spring-security-messaging:6.1.1'
	implementation 'com.corundumstudio.socketio:netty-socketio:2.0.3'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
    implementation 'org.jetbrains:annotations:24.0.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.springframework.security:spring-security-config:6.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
